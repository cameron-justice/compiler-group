/* PROGRAMMER: Justin Wade */
/* PROGRAM: Project 6: Test Case */
/* DUE: Wednesday, November 13, 2020 */
/* INSTRUCTOR: Dr. Zhijiang Dong */

let 

    var lvalue := 1
    type intArray = array of int
    var lvalueA := intArray [1] of 0

    var a := 1
    var b := 2
    var c := 3
    
    var array_int := 1
    var array_int1 := intArray [1] of 0
    
    var vname : int := "string"                                                  /* test case 27 */
    var vname := nil                                                             /* test case 28 */
    
in

/* Type checking on SubscriptVar like: lvalue[exp]  */
lvalue[1];                                                                       /* test case 1 */
lvalueA["string"];                                                               /* test case 2 */

/* Type checking on OpExp like: exp1 operator exp2  */
"string" + 2;                                                                    /* test case 3 */
1 + "string";                                                                    /* test case 4 */

"string" = 2;                                                                    /* test case 5 */
nil = 2;                                                                         /* test case 6 */
nil = nil;                                                                       /* test case 7 */

"string" < 2;                                                                    /* test case 8 */
1 > "apple";                                                                     /* test case 9 */

/* Type checking on CallExp like: fname(exp1, exp2, …, expn)  */
fname();                                                                         /* test case 10 */
vname();                                                                         /* test case 11 */
print("string", "string", "string");                                             /* test case 12 */
print();                                                                         /* test case 13 */
concat(5, "string");                                                             /* test case 14 */

/* Type checking on AssignExp like: lvalue := exp  */
lvalue := "apple";                                                               /* test case 15 */

/* Type checking on IfExp like: if exp1 then exp2 else exp3  */
if "apple" then a + b;                                                           /* test case 16 */
if a = 1 then b;                                                                 /* test case 17 */
if a = 1 then c = a + b else c = "apple";                                        /* test case 18 */

/* Type checking on WhileExp  */
while a = 1 do c = a + b;                                                        /* test case 19 */

/* Type checking on ForExp like: for varname := exp1 to exp2 do exp3  */
for varname := "apple" to 5 do c = a + b;                                       /* test case 20 */
for varname := 1 to "banana" do c = a + b;                                      /* test case 21 */
for varname := 1 to 5 do c = a + b;                                             /* test case 22 */

/* Type checking on ArrayExp like: array_typename [exp1] of exp2  */
array_typename[1] of 5;                                                          /* test case 23 */
array_int[1] of 5;                                                               /* test case 24 */
array_int1["apple"] of 5;                                                        /* test case 25 */
array_int1[1] of "string"                                                        /* test case 26 */
end
